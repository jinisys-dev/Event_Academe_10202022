<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAACAgAAABACAAqBAAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAfJu+AJaWlgB2dnYALU15AHl5eQAaNWEAQ0NDAIO+1gB1rcYAVIaxAGKN
        uQDR0dEAQGWTAFWBrwBiYmIAv7+/AJLZ7QBvsNkAVYizADFQfQBZWVkAHThkACpJdQBdibgAn5+fAHWu
        zwB0tNMAI0BsAE55pQBNTU0AerrZAH7D4wBubm4AJkRwAE11ogCu+v0AFzJeAGmjzgBpaWkAMlmCAE51
        pAA7XYoAID1qALe3twBJSUkAbK3WAIXD1wBVVVUAKEZyAIeHhwBRUVEAXZK+AHx8fABVf64AQWWTAKKy
        xADKysoASnCeAENqlQBlmsYAgcPfAGWeyQBLcqAAUHqoABMsWABTfKoAUHimAHJycgBrp9EAX19fAHe5
        2QBmZmYAjY2NAF2MugB/f38AWIKxAK2trQBakbsAWY64AElvnQCRkZEA6fv9AGKcxgBelsAAPmGOAFKC
        rQBQf6sAaanRADZWgwDf398A7+/vAAAAAADl5eUA7u7uAOjo6ADPz88A9/f3AHG13QDr6+sA8PDwANPT
        0wDx8fEA4ODgAOzs7ADh4eEA8vLyANnZ2QDb29sA5OTkAO3t7QDq6uoA4uLiAOPj4wDm5uYA5+fnAI/W
        7ACU3e8A6enpAPv7+wDV1dUA0tLSAPX19QD09PQAnZ2dAGOWwwDc3NwAWoW0APPz8wDY2NgA3t7eAPb2
        9gD4+PgAmuPyAKDp9QBei7oAzc3NAKr1+gDU1NQA1tbWAHG03ACJ0OkAo+33AN3d3QBikLwA19fXAIPJ
        5gAPDw8AYpXCAILI5QBsqdMAr6+vAB8fHwD6+voA2traAGCQvgCU1OUAW4e2AKXv+ABxlbsA+fn5AHi8
        4AAzU4AAOFmGAMXHygCPj48AvsPJAKenpwBqb3cAapG6AE98qACbrsMAnNTaAF6UvwCjo6MAXFxcAIOD
        gwCUqsIAYZbCAI2mwAA/Pz8ARWuZAPz8/ABSfqsAzs7OAFyPtABklbQAw8PDAJXX5wBZh7UAm5ubAKm0
        wABjh60AxMTEAGagwgA8ZowAUoatAI3K3gBnl8AAisfbAKDo8wBYhbMAm6i3ADdeigCX3esALlF8AH66
        zwB4lrYAnOXzAIXI4wBrqs8Ah8rkAIfN5wCY2ugAeLbXACg8XwBpnscAU32sALKysgBLc6EAiM3lAGGT
        wAC7u7sASHedAKClqwBfk64AsLvHAKqqqgCNj5IAdbfcAHySqgB0hZYAXo68AEJxmgBNgaoAY53AAGKa
        xQBjibIAVou1AFeOtwB4utwAcK/RAGCUwAAfPGcAfsHfAJLW4wC9vb0Aa6zUAEddfAAvLy8A3fn8AFmP
        sQCAgIAAEitXAMzMzAD///8AAAAAAP//////////////////////////////////////////////////
        //////////////8VFf/////////////////////////////////////8FfSbFQX/////////////////
        ///////////////8FU2UjZuPFxUk//////////////////////////8VBYthYZTHxo8XFxcV/P//////
        //////////////8V/JURi2FhGgi5QX4XFxcX/P////////////////8V/D0llRGL9k24Li4cOUGcFxf8
        //////////////8V/Jp8PSWVLVMJTfONm4/YOT4NF/z///////////8VFeeGmnw9JawJ7VdhlI3Ejxec
        P08o/P//////////FREl54aafDNVVVKLYWFGCLkNnBcXfij8//////////8VESWThkm2HO1EEYsRU7jN
        ByI+NRcXF/z///////////wRJdxB2raxJZUtUhJOHo2bCkFPKEsX/P///////////BEzKNq8fD0lUhIS
        PWGUjdSPF35CT0L8///////////8ElbIhpp8sQlWUxFhYRAjI7vFFxdLPvz///////////wzPZOG5w0c
        CSURix+FiIiIiIgHjxcX/P///////////BElk9giP/ElleQQnZ2rUVH5q53HGRf8///////////8Eesc
        Pg18PUTQz4WFhfv+dnb7hYXLOvz///////////xOqQ0XmnzVEISEhISE+/55efuEhQX8////////////
        /E47k4bX0nR0dHR0dHT7/l1d+xv8///////////////8ESU7HnNz2zxzc3Nzc/v+Xl77/////zEYGP//
        //////wR79OMjBm0tDk8jIyM+/5oaPv////7YHZ2+////////BoakZGRwSoqzEaRkZH7/mtr+/////v+
        goL7////////FfxGRh8fH/AfHx8w1vv+iYn7////+/5lZfv///////////zyoKCgoKAn/P//+/63tzH7
        ///7/mJi+//////////////8FRUVBf/////7/v7+Wpb7+/v+XFz7//////////////////////////ta
        /v7+/lkY+/5ZWfv/////////////////////////+w/+/v7+/v5f/mpq+///////////////////////
        ////+w9a/v7+/v7+ZGT7////////////////////////////+/sPYP7+/v6Hh/v/////////////////
        //////////////sxX/7+/v5g+//////////////////////////////////7+1n+YJb7////////////
        ////////////////////////+/v7+/////////////+f///+B///+AH//+AAf/+AAD/+AAA/+AAAP+AA
        AD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAH/AAAH/wAAHj8AABwfAAAcH4AAHB/gD
        Awf+DwAH//8AB///AAf//4AH///AB///8Af///wH////DygAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB07aQ8dO2k/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdO2lfKkp03zteg/8dO2nfHTtpPwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdO2k/HTtpv055nP+h3ej/o9vp/1d8pf8oR3X/HTtprx07
        aR8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdO2kfHTtpnzFWgf9rocX/ktHp/7Dw+P+j2+n/dJ/G/2qT
        vf9IbJf/IkBu8ho1X48PHjYjAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdO2kPHTtpfyRFce9fkbb/gsDj/4LA4/+S0en/rez1/5rQ
        4f90n8b/b5nD/2+Zw/9ljbf/OFqG/xs5Z/ISI0BWAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHTtpXx07ae9Qe6T/erXY/4K/4v+CwOP/gsDj/4S9
        2f+Ets3/dqS//2WNtv9slb//b5nD/2+Zw/9vmcP/UXei/xs5Z/IAAAAzAAAADwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHTtpPx07ac88YIv/cKPJ/3222v9/vN//gr/i/3y4
        2/9soMX/bp6//5XN3f+Vy93/Yoqy/1yBrP9ljbb/bZfB/2+Zw/9vmcP/HTtp/wAAADMAAAAsAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHTtpHx07aa8oSHb/YY21/3ir0f96sNb/fbba/325
        3f9wpMr/ZZW8/2ygxf+Oy+T/sPD4/6Pb6f90n8b/Zo24/1yBrP9dg63/aJC7/2+Zw/8dO2n/AAAAMwAA
        ADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHTtpDx07aY8iQW//TXOd/3KfyP91pMz/eKvR/3qw
        1v9wo8n/ZpW8/2iawP96ttj/gsDj/5LR6f+w8Pj/nNLj/3Sfxv9vmcP/bZfB/2OLtf9bgKv/YIaw/x07
        af8AAAAzAAAAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB07aS8dO2nvSHCa/2+dxf9wmsT/cp/I/3Wk
        zP9woMf/ZJG4/2SSuf90qs//gr/i/4LA4/+CwOP/iMTe/4e70P92pL//aJG5/22Xwf9vmcP/b5nD/2yV
        v/9ghrD/HTtp/wAAADMAAAAmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHTtp72mdwv96sNb/dKTL/3Ca
        xP9vm8T/ZI63/1+Ksv9qmsH/e7TY/3+83/+Cv+L/frvd/3Clyv9unr//jsTX/5PH2v9fhq7/XYOt/2eP
        uf9vmcP/b5nD/2+Zw/8dO2n/AAAALwAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdO2n/gLzf/3qw
        1v9zosr/ZIy2/1yErf9kjrf/c6TL/3qw1v99ttr/fbnd/3Sqz/9mmL3/ap3D/4rE3/+w8Pj/o9vp/3Od
        xP9ljbb/W4Cr/2CGsP9qkr3/b5nD/x07af8AAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB07
        af+AvN//b6HI/1+Isf9ehK7/a5fA/3WkzP94q9H/erDW/3Wqz/9nmL7/Zpi9/3Wt0f+CwOP/ktHp/7Dw
        +P+m4Oz/dJ/G/2+Zw/9slb//YYiy/1uAq/9iibT/HTtp/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHTtp/2eYvv9ijrb/aZW9/3CaxP9yn8j/daTM/3Oky/9nlr3/Yo+3/3Ckyv+Avd//gsDj/4LA
        4/+g3/D/ufr9/7v8/f+k3ev/eaXK/2+Zw/9vmcP/apK9/12Drf8dO2n/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAdO2n/bqLI/3es0f90pMv/cJrE/3Cdxv9nkrv/X4qy/2eWvf96sdb/f7zf/4K/
        4v+Pzej/re33/7b3+/+29/v/tvf7/7b3+/+29/v/k8jf/3Oexv9vmcP/b5nD/x07af8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB07af+AvN//erDW/3Sky/9ljbj/XoWv/2GLtP9yo8r/erDW/322
        2v+GwuL/oN7w/7Ly+f+y8vn/qtvg/+38/f/s/P3/4/r9/6rb4P+y8vn/rez1/4i61/9vmcP/HTtp/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHTtp/4C83/90qM7/YIqz/12Crf9nkbv/daTM/3ir
        0f99tNf/ldHo/6rp9f+t7ff/re33/63t9/+QkJD///////z8/P/8/Pz/kJCQ/63t9/+t7ff/pePu/1R9
        n/8dO2n/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdO2n/a53E/2GNtf9mkbr/bpnD/3Kf
        yP91pMz/icHd/6Lh8P+o6PT/qOj0/6jo9P+o6PT/qOj0/5CQkP//////9/f3//f39/+QkJD/qOj0/3Gi
        uv8nR3L/HTtpjx07aS8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB07af9rncP/dqnQ/3Sk
        y/9wmsT/eqzQ/5fS6P+j4/L/o+Py/6Pj8v+j4/L/o+Py/6Pj8v+j4/L/kJCQ///////x8fH/8fHx/5CQ
        kP8wUnv/HTtpvx07aR8AAAAAkJCQH5CQkD+QkJAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHTtp/4C8
        3/96sNb/d6fO/4zE3/+e3e//nt3v/5jV6f+SzOT/nt3v/57d7/+e3e//nt3v/57d7/+QkJD//////+zs
        7P/s7Oz/kJCQ/x07aT8AAAAAAAAAAJCQkJ+Xl5f/ra2t/62trf+QkJCPAAAAAAAAAAAAAAAAAAAAAAAA
        AAAdO2n/gLzf/4nE4v+X1ev/mdft/5nX7f+Dutb/V3yo/1d8qP9bgqz/kMvj/5nX7f+Z1+3/mdft/5CQ
        kP//////5ubm/+bm5v+QkJD/AAAAAAAAAAAAAAAAkJCQ//j4+P/8/Pz//Pz8/5CQkP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAB07ae9Ldpr/hsHb/5PR6v+T0er/k9Hq/3ity/8uTnv/Lk57/z5jjf+JxN7/k9Hq/5PR
        6v9rnr3/kJCQ///////h4eH/4eHh/5CQkP8AAAAAAAAAAAAAAACQkJD///////j4+P/4+Pj/kJCQ/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAHTtpDx07aX8dO2nvWoir/4jE4P+OzOj/jszo/47M6P+Bu9j/jszo/47M
        6P91q8r/NVmC/zdNce+QkJD//////9vb2//b29v/kJCQ/5CQkB8AAAAAAAAAAJCQkP//////8/Pz//Pz
        8/+QkJD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB07aR8dO2mfLU56/2SWuf+JxuX/icbl/4nG
        5f98ttf/QmuS/x07ad8dO2lPkJCQf5CQkP//////1tbW/9bW1v+Xl5f/kJCQ75CQkE8AAAAAkJCQ////
        ///u7u7/7u7u/5CQkP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdO2k/HTtpvzlg
        if9mmr7/U4Ko/yRFcu8dO2l/HTtpDwAAAACQkJB/kJCQ//////////////////Ly8v+7u7v/kJCQ/5CQ
        kK+QkJD//////+np6f/p6en/kJCQ/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHTtpXx07ab8dO2mfHTtpHwAAAAAAAAAAAAAAAJCQkC+QkJD/8vLy////////////////////
        ///k5OT/ra2t/5CQkP//////5OTk/+Tk5P+QkJD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCQkK+0tLT/////////
        ////////////////////////19fX///////f39//39/f/5CQkP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkJCQD5CQ
        kM+tra3/8vLy/////////////////////////////////9ra2v/a2tr/kJCQ/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJCQkH+QkJDvycnJ//j4+P//////////////////////1dXV/9XV1f+QkJD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCQkA+QkJCfl5eX/9fX1///////////////////////+Pj4/5CQ
        kP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQkJAvkJCQv6Wlpf/k5OT///////j4
        +P+7u7v/kJCQjwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkJCQT5CQ
        kN+QkJD/kJCQ/5CQkI+QkJAPAAAAAAAAAAAAAAAA//+f////B////AH///AAP//AAB//gAAP/gAAD/gA
        AA/gAAAPwAAAD8AAAA/AAAAfwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAj8AAAwfAAAcHwAAHB8AA
        AwfwAAEH/AIAB/8OAAf//wAH//8AB///wAf//+AH///4B////gc=
</value>
  </data>
</root>