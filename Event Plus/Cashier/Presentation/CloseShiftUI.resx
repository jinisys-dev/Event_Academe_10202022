<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAIAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAAQAAAAIAAAAD/AAAAACAAAEAgAACAIAAA/yAAAABAAABAQAAAgEAAAP9AAAAAYAAAQGAAAIBg
        AAD/YAAAAIAAAECAAACAgAAA/4AAAACgAABAoAAAgKAAAP+gAAAAwAAAQMAAAIDAAAD/wAAAAP8AAED/
        AACA/wAA//8AAAAAIABAACAAgAAgAP8AIAAAICAAQCAgAIAgIAD/ICAAAEAgAEBAIACAQCAA/0AgAABg
        IABAYCAAgGAgAP9gIAAAgCAAQIAgAICAIAD/gCAAAKAgAECgIACAoCAA/6AgAADAIABAwCAAgMAgAP/A
        IAAA/yAAQP8gAID/IAD//yAAAABAAEAAQACAAEAA/wBAAAAgQABAIEAAgCBAAP8gQAAAQEAAQEBAAIBA
        QAD/QEAAAGBAAEBgQACAYEAA/2BAAACAQABAgEAAgIBAAP+AQAAAoEAAQKBAAICgQAD/oEAAAMBAAEDA
        QACAwEAA/8BAAAD/QABA/0AAgP9AAP//QAAAAGAAQABgAIAAYAD/AGAAACBgAEAgYACAIGAA/yBgAABA
        YABAQGAAgEBgAP9AYAAAYGAAQGBgAIBgYAD/YGAAAIBgAECAYACAgGAA/4BgAACgYABAoGAAgKBgAP+g
        YAAAwGAAQMBgAIDAYAD/wGAAAP9gAED/YACA/2AA//9gAAAAgABAAIAAgACAAP8AgAAAIIAAQCCAAIAg
        gAD/IIAAAECAAEBAgACAQIAA/0CAAABggABAYIAAgGCAAP9ggAAAgIAAQICAAICAgAD/gIAAAKCAAECg
        gACAoIAA/6CAAADAgABAwIAAgMCAAP/AgAAA/4AAQP+AAID/gAD//4AAAACgAEAAoACAAKAA/wCgAAAg
        oABAIKAAgCCgAP8goAAAQKAAQECgAIBAoAD/QKAAAGCgAEBgoACAYKAA/2CgAACAoABAgKAAgICgAP+A
        oAAAoKAAQKCgAICgoAD/oKAAAMCgAEDAoACAwKAA/8CgAAD/oABA/6AAgP+gAP//oAAAAMAAQADAAIAA
        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
        B///4Af///AP///8P///////
</value>
  </data>
</root>